{"version":3,"sources":["api/users.ts","helpers/helpers.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","getUser","userId","usersFromServer","find","getTodoId","todos","Math","max","map","todoList","title","completed","todo","user","UserInfo","className","href","TodoInfo","Card","classNames","TodoList","App","useState","setTitle","setUserId","hasTitleError","setTitleError","hasUserError","setUserError","setTodos","Form","action","method","onSubmit","event","preventDefault","trim","newTodo","prevTodoList","Group","Label","Control","type","placeholder","value","onChange","target","replace","size","Select","Number","disabled","Button","variant","ReactDOM","render","document","getElementById"],"mappings":"oSAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,OCtDJ,SAASC,EAAQC,GACtB,OAAOC,EAAgBC,MAAK,qBAAGP,KAAgBK,MAAW,KAGrD,SAASG,EAAUC,GACxB,OAAOC,KAAKC,IAAL,MAAAD,KAAI,YAAQD,EAAMG,KAAI,qBAAGZ,QAAgB,EAG3C,IAAMa,ECbE,CACb,CACEb,GAAI,EACJc,MAAO,qBACPC,WAAW,EACXV,OAAQ,GAEV,CACEL,GAAI,GACJc,MAAO,kBACPC,WAAW,EACXV,OAAQ,GAEV,CACEL,GAAI,EACJc,MAAO,qCACPC,WAAW,EACXV,OAAQ,IDJoCO,KAAI,SAACI,GACnD,OAAO,2BACFA,GADL,IAEEC,KAAMb,EAAQY,EAAKX,a,uCERVa,EAA4B,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAExCd,EAEEc,EAFFd,MACAF,EACEgB,EADFhB,KAGF,OACE,mBACEkB,UAAU,WACVC,KAAI,iBAAYjB,GAFlB,SAIGF,KCNMoB,G,MAA4B,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAExChB,EAIEgB,EAJFhB,GACAe,EAGEC,EAHFD,UACAD,EAEEE,EAFFF,MACAG,EACED,EADFC,KAGF,OACE,eAACK,EAAA,EAAD,CACE,UAAStB,EACTmB,UAAWI,IACT,WAAY,CACV,sBAAuBR,IAJ7B,UAQE,oBAAII,UAAU,kBAAd,SACGL,IAGH,8BAEIG,EACI,cAAC,EAAD,CAAUA,KAAMA,IAChB,4BC5BDO,G,MAA4B,SAAC,GAAe,IAAbf,EAAY,EAAZA,MAC1C,OACE,yBAASU,UAAU,WAAnB,SACGV,EAAMG,KAAI,SAACI,GACV,OACE,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKhB,WCLjByB,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOrB,EAAP,KAAeuB,EAAf,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAqCJ,oBAAS,GAA9C,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA0BN,mBAASb,GAAnC,mBAAOJ,EAAP,KAAcwB,EAAd,KA0CA,OACE,sBAAKd,UAAU,WAAf,UACE,oBAAIA,UAAU,mBAAd,2BAIA,eAACe,EAAA,EAAD,CACEC,OAAO,aACPC,OAAO,OACPC,SAlCU,SAACC,GAGf,GAFAA,EAAMC,iBAEFzB,EAAM0B,QAAUnC,EAAQ,CAC1B,IAAMoC,EAAU,CACdzC,GAAIQ,EAAUC,GACdK,QACAT,SACAU,WAAW,EACXE,KAAMb,EAAQC,IAGhB4B,GAAS,SAACS,GAAD,4BAAsBA,GAAtB,CAAoCD,OAhB/Cd,EAAS,IACTC,EAAU,GAmBLd,EAAM0B,QACTV,GAAc,GAGXzB,GACH2B,GAAa,IAUb,UAKE,cAACE,EAAA,EAAKS,MAAN,CAAYxB,UAAU,WAAtB,SACE,eAACe,EAAA,EAAKU,MAAN,oBAGGf,GACC,sBAAMV,UAAU,QAAhB,mCAGF,cAACe,EAAA,EAAKW,QAAN,CACEC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZ9C,KAAK,QACL+C,MAAOlC,EACPmC,SAjEc,SAACX,GACzBX,EAASW,EAAMY,OAAOF,MAAMG,QAAQ,gFAA+B,KACnErB,GAAc,IAgEJsB,KAAK,YAKX,cAAClB,EAAA,EAAKS,MAAN,CAAYxB,UAAU,WAAtB,SACE,eAACe,EAAA,EAAKU,MAAN,mBAGGb,GACC,sBAAMZ,UAAU,QAAhB,mCAGF,eAACe,EAAA,EAAKmB,OAAN,CACE,UAAQ,aACRpD,KAAK,SACL+C,MAAO3C,EACP4C,SA9Ee,SAACX,GAC1BV,EAAU0B,OAAOhB,EAAMY,OAAOF,QAC9BhB,GAAa,IA6EHoB,KAAK,KALP,UAOE,wBACEJ,MAAM,IACNO,UAAQ,EAFV,2BAOCjD,EAAgBM,KAAI,SAACK,GACpB,IACEjB,EAEEiB,EAFFjB,GACAC,EACEgB,EADFhB,KAGF,OACE,wBACE+C,MAAOhD,EADT,SAIGC,GAFID,cAUjB,qBAAKmB,UAAU,oBAAf,SACE,cAACqC,EAAA,EAAD,CACEV,KAAK,SACL,UAAQ,eACRW,QAAQ,OAHV,sBAUJ,cAAC,EAAD,CAAUhD,MAAOA,QCvIvBiD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63bda8d1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport todosFromServer from '../api/todos';\n\nimport { Todo } from '../types/Todo';\n\nexport function getUser(userId: number) {\n  return usersFromServer.find(({ id }) => id === userId) || null;\n}\n\nexport function getTodoId(todos: Todo[]): number {\n  return Math.max(...todos.map(({ id }) => id)) + 1;\n}\n\nexport const todoList: Todo[] = todosFromServer.map((todo) => {\n  return {\n    ...todo,\n    user: getUser(todo.userId),\n  };\n});\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport Card from 'react-bootstrap/Card';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <Card\n      data-id={id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <div>\n        {\n          user\n            ? <UserInfo user={user} />\n            : 'User was not found'\n        }\n      </div>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <TodoInfo key={todo.id} todo={todo} />\n        );\n      })}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport usersFromServer from './api/users';\nimport { todoList, getTodoId, getUser } from './helpers/helpers';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasUserError, setUserError] = useState(false);\n  const [todos, setTodos] = useState(todoList);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.replace(/[^a-zA-Zа-яА-ЯіІїЇєЄ0-9\\s]/g, ''));\n    setTitleError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setUserError(false);\n  };\n\n  const clearStates = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title.trim() && userId) {\n      const newTodo = {\n        id: getTodoId(todos),\n        title,\n        userId,\n        completed: false,\n        user: getUser(userId),\n      };\n\n      setTodos((prevTodoList) => [...prevTodoList, newTodo]);\n      clearStates();\n    }\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n  };\n\n  return (\n    <div className=\"App page\">\n      <h1 className=\"page__title mb-3\">\n        Add todo form\n      </h1>\n\n      <Form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <Form.Group className=\"mb-1 row\">\n          <Form.Label>\n            Title:\n\n            {hasTitleError && (\n              <span className=\"error\"> Please enter a title</span>\n            )}\n\n            <Form.Control\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={handleTitleChange}\n              size=\"sm\"\n            />\n          </Form.Label>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3 row\">\n          <Form.Label>\n            User:\n\n            {hasUserError && (\n              <span className=\"error\"> Please choose a user</span>\n            )}\n\n            <Form.Select\n              data-cy=\"userSelect\"\n              name=\"userId\"\n              value={userId}\n              onChange={handleSelectChange}\n              size=\"sm\"\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => {\n                const {\n                  id,\n                  name,\n                } = user;\n\n                return (\n                  <option\n                    value={id}\n                    key={id}\n                  >\n                    {name}\n                  </option>\n                );\n              })}\n            </Form.Select>\n          </Form.Label>\n        </Form.Group>\n\n        <div className=\"d-grid gap-2 mb-4\">\n          <Button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            variant=\"dark\"\n          >\n            Add\n          </Button>\n        </div>\n      </Form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}